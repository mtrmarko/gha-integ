name: Run continous integration (CI) on a schedule
on:
  push:
    branches:
      - main
env:
  ORG: nuclearnai
  MRE_REPO: model-runtime-engine
  MRE_BRANCH: main
  MRE_DOCKER_IMAGE: np_mreapi_dev
  MRE_DEVENV_DOCKER_IMAGE: np_mreapi_devenv
  FRONTEND_REPO: frontend
  FRONTEND_BRANCH: main
  FRONTEND_DOCKER_IMAGE: np_frontend_dev
  FRONTEND_DEVENV_DOCKER_IMAGE: np_frontend_devenv
  NPIT_REPO: np_integration_testing
  NPIT_BRANCH: main
  NPIT_DOCKER_IMAGE: np_integration_testing_dev
jobs:
  prep-matrix:
    name: Prepare matrix
    runs-on: ubuntu-latest
    outputs:
      container-image-matrix: ${{ steps.prepare-container-image-matrix.outputs.container-image-matrix }}
    steps:
      - id: prepare-container-image-matrix
        shell: bash
        run: |
          matrix=$(cat <<EOF
          {
            "include": [{
              "repo": "$NPIT_REPO",
              "org": "$ORG",
              "branch": "$NPIT_BRANCH",
              "docker-image": "$NPIT_DOCKER_IMAGE"
            }, {
              "repo": "$MRE_REPO",
              "org": "$ORG",
              "branch": "$MRE_BRANCH",
              "docker-image": "$MRE_DOCKER_IMAGE"
            }, {
              "repo": "$MRE_REPO",
              "org": "$ORG",
              "branch": "$MRE_BRANCH",
              "docker-image": "$MRE_DEVENV_DOCKER_IMAGE"
            }, {
              "repo": "$FRONTEND_REPO",
              "org": "$ORG",
              "branch": "$FRONTEND_BRANCH",
              "docker-image": "$FRONTEND_DOCKER_IMAGE"
            }, {
              "repo": "$FRONTEND_REPO",
              "org": "$ORG",
              "branch": "$FRONTEND_BRANCH",
              "docker-image": "$FRONTEND_DEVENV_DOCKER_IMAGE"
            }]
          }
          EOF
          )
          matrix=$(echo $matrix | sed ':a;N;$!ba;s/\n//g')
          echo "container-image-matrix=$matrix" >> $GITHUB_OUTPUT
          echo $matrix
  test:
    name: test
    runs-on: ubuntu-latest
    needs: prep-matrix
    steps:
      - name: dump json
        shell: bash
        run: echo "${{ needs.prep-matrix.outputs.container-image-matrix }}"
  checkout-repos:
    name: Checkout, Start and Test Nuclearn Platform
    runs-on: ubuntu-latest
    needs: prep-matrix
    strategy:
      matrix: ${{ fromJson(needs.prep-matrix.outputs.container-image-matrix) }}
    steps:
      - name: test-matrix
        shell: bash
        run: |
          echo "org is ${{ matrix.org }}"
          echo "branch is ${{ matrix.branch }}"
          echo "repo is ${{ matrix.repo }}"
          echo "has dev env is ${{ matrix.process_devenv }}"
          echo "$${{ toJson(matrix) }}"
